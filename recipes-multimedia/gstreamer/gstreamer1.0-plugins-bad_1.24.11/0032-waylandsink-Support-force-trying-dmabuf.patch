From ae84bf4123d02bd74c2d5e66e96591e059cfde6a Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Wed, 14 Jun 2023 10:04:42 +0800
Subject: [PATCH 32/42] waylandsink: Support force trying dmabuf

Not all source plugins would provide dma feature for dmabuf.

Set env WAYLANDSINK_FORCE_DMABUF=1 to enable it.

Tested on RK3588 EVB with:
export GST_MPP_VIDEODEC_DEFAULT_ARM_AFBC=1
export WAYLANDSINK_FORCE_DMABUF=1
gst-play-1.0 hevc.mp4 --videosink=waylandsink

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 ext/wayland/gstwaylandsink.c | 35 ++++++++++++++++++++++++++---------
 ext/wayland/gstwaylandsink.h |  2 ++
 2 files changed, 28 insertions(+), 9 deletions(-)

diff --git a/ext/wayland/gstwaylandsink.c b/ext/wayland/gstwaylandsink.c
index c204d4b..9fd5dc1 100644
--- a/ext/wayland/gstwaylandsink.c
+++ b/ext/wayland/gstwaylandsink.c
@@ -260,12 +260,18 @@ gst_wayland_sink_class_init (GstWaylandSinkClass * klass)
 static void
 gst_wayland_sink_init (GstWaylandSink * self)
 {
+  const gchar *env;
+
   g_mutex_init (&self->display_lock);
   g_mutex_init (&self->render_lock);
 
   self->layer = GST_WL_WINDOW_LAYER_NORMAL;
   self->alpha = 1.0;
   self->fill_mode = DEFAULT_FILL_MODE;
+
+  env = g_getenv ("WAYLANDSINK_FORCE_DMABUF");
+  if (env && !strcmp (env, "1"))
+    self->force_dmabuf = TRUE;
 }
 
 static void
@@ -692,9 +698,10 @@ gst_wayland_sink_fixup_caps (GstWaylandSink * self, GstCaps * caps)
 
   if (gst_wl_display_check_format_for_dmabuf (self->display,
           DRM_FORMAT_NV15, DRM_FORMAT_MOD_LINEAR)) {
-    tmp_caps = gst_caps_from_string (
-        GST_VIDEO_CAPS_MAKE_WITH_FEATURES (GST_CAPS_FEATURE_MEMORY_DMABUF,
-            "NV12_10LE40"));
+    tmp_caps = gst_caps_from_string (GST_VIDEO_CAPS_MAKE ("NV12_10LE40"));
+    if (!self->force_dmabuf)
+      gst_caps_set_features_simple (tmp_caps,
+          gst_caps_features_new_single (GST_CAPS_FEATURE_MEMORY_DMABUF));
 
     if (gst_wl_display_check_format_for_dmabuf (self->display,
             DRM_FORMAT_NV15, DRM_AFBC_MODIFIER)) {
@@ -710,6 +717,9 @@ gst_wayland_sink_fixup_caps (GstWaylandSink * self, GstCaps * caps)
   if (gst_wl_display_check_format_for_dmabuf (self->display,
           DRM_FORMAT_NV20, DRM_FORMAT_MOD_LINEAR)) {
     tmp_caps = gst_caps_from_string (GST_VIDEO_CAPS_MAKE ("NV16_10LE40"));
+    if (!self->force_dmabuf)
+      gst_caps_set_features_simple (tmp_caps,
+          gst_caps_features_new_single (GST_CAPS_FEATURE_MEMORY_DMABUF));
 
     if (gst_wl_display_check_format_for_dmabuf (self->display,
             DRM_FORMAT_NV20, DRM_AFBC_MODIFIER)) {
@@ -724,18 +734,22 @@ gst_wayland_sink_fixup_caps (GstWaylandSink * self, GstCaps * caps)
 
   if (gst_wl_display_check_format_for_dmabuf (self->display,
           DRM_FORMAT_NV12, DRM_AFBC_MODIFIER)) {
-    tmp_caps = gst_caps_from_string (
-        GST_VIDEO_CAPS_MAKE_WITH_FEATURES (GST_CAPS_FEATURE_MEMORY_DMABUF,
-            "NV12"));
+    tmp_caps = gst_caps_from_string (GST_VIDEO_CAPS_MAKE ("NV12"));
+    if (!self->force_dmabuf)
+      gst_caps_set_features_simple (tmp_caps,
+          gst_caps_features_new_single (GST_CAPS_FEATURE_MEMORY_DMABUF));
+
     gst_caps_set_simple (tmp_caps, "arm-afbc", G_TYPE_INT, 1, NULL);
     gst_caps_append (caps, tmp_caps);
   }
 
   if (gst_wl_display_check_format_for_dmabuf (self->display,
         DRM_FORMAT_NV16, DRM_AFBC_MODIFIER)) {
-    tmp_caps = gst_caps_from_string (
-        GST_VIDEO_CAPS_MAKE_WITH_FEATURES (GST_CAPS_FEATURE_MEMORY_DMABUF,
-            "NV16"));
+    tmp_caps = gst_caps_from_string (GST_VIDEO_CAPS_MAKE ("NV16"));
+    if (!self->force_dmabuf)
+      gst_caps_set_features_simple (tmp_caps,
+          gst_caps_features_new_single (GST_CAPS_FEATURE_MEMORY_DMABUF));
+
     gst_caps_set_simple (tmp_caps, "arm-afbc", G_TYPE_INT, 1, NULL);
     gst_caps_append (caps, tmp_caps);
   }
@@ -948,6 +962,9 @@ gst_wayland_sink_set_caps (GstBaseSink * bsink, GstCaps * caps)
   use_dmabuf = gst_caps_features_contains (gst_caps_get_features (caps, 0),
       GST_CAPS_FEATURE_MEMORY_DMABUF);
 
+  if (self->force_dmabuf)
+    use_dmabuf = TRUE;
+
   /* validate the format base on the memory type. */
   if (use_dmabuf) {
     if (!gst_wl_display_check_format_for_dmabuf (self->display,
diff --git a/ext/wayland/gstwaylandsink.h b/ext/wayland/gstwaylandsink.h
index 247ff09..8d47375 100644
--- a/ext/wayland/gstwaylandsink.h
+++ b/ext/wayland/gstwaylandsink.h
@@ -61,6 +61,8 @@ struct _GstWaylandSink
   gdouble alpha;
   GstWlWindowFillMode fill_mode;
 
+  gboolean force_dmabuf;
+
   gchar *display_name;
 
   GMutex render_lock;
-- 
2.20.1

